Ben Becker (bbecker5)
Rob Simari (rsimari)
First Report

github repository: https://github.com/benedictb/Project

To run the project, we open QTcreator and click run. I'm not sure how to run the project outside of QT creator yet, that will be something that we'll have to figure out. After it successfully opens, type in an address into the text bar (you can leave off the 'http://', as we wrote in functionality that will add it in if ommited). To visit the webpage, simply click the button labeled 'Go'; the webpage will then load. You can use the '<' or the '>' buttons to go forward or backward in your history path (warning: this feature isn't perfect yet).

When we initally decided on this project, we thought that the majority of our time would be spent getting the browser to work and doing lower-level programming in C++. Instead, we've found that the QT webkit makes it really easy to make a simple browser, so we have to rethink what our project's goals are. For lab 7 & 8, we've fulfilled our rubric by making the simple browser and a couple of easy to use features. For the rest of the project, we think that instead of focusing on getting the actual browser working, we can concentrate on implementing useful features in the browser itself. Particularly, we would like to make features that are a) uncommon in other commercial browsers and b) have something to do with unix shells, perhaps using the openSSH library.

We spent a lot of our time getting ourselves setting up and getting QT and QT creator to work. Part of what makes QT great (or more specifically why developers use QT in the first place) is that QT applications are cross-platform. Therefore our project will be able to run on Windows, Mac and Linux. Rob took care of getting our simple browser working on OSX and Ben got it to work on Windows 10 and Ubuntu 14.04. It took some time to get it to work on Linux because there were some issues with headers, file locations and GL libraries, but looking for answers on stack overflow resulted in solutions that fixed these problems. Once we got everything set up, we followed a tutorial on how to create a simple web browser. This was a good introduction because not only was it relevant to our project, but it also gave us exposure to how to use QT and QTcreator. After we got the simple web browser to work, we implemented a simple back and forward button which uses a vector to store history. This will need to be improved in the coming weeks. Additionally, we added some code to the go button that let you enter a web address without first typing in 'http://', which was necessary before.

Next, we plan to implement more basic web features, such as bookmarks, tabs, and making the press of the enter button load the current address (a small but infuriating problem). After we have most of these features down, we hope to include some sort of ssh functionality, basic unix functionality, a in-browser game like chrome's dinosaurs, and/or whatever we think of. At this point we have a pretty open project plan, now that the initial challenge of getting the actual browser working isn't an issue. Feel free to give us feedback or ideas on cool things we could add! 